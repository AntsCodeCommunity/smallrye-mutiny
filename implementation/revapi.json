[
  {
    "extension": "revapi.java",
    "id": "java",
    "configuration": {
      "missing-classes": {
        "behavior": "report",
        "ignoreMissingAnnotations": false
      },
      "filter": {
        "packages": {
          "regex": true,
          "include": [
            "io\\.smallrye\\.mutiny(\\..+)?"
          ],
          "exclude": [
            "io\\.smallrye\\.mutiny\\.operators(\\..+)?"
          ]
        }
      }
    }
  },
  {
    "extension": "revapi.differences",
    "id": "breaking-changes",
    "configuration": {
      "criticality": "highlight",
      "minSeverity": "POTENTIALLY_BREAKING",
      "minCriticality": "documented",
      "differences": [
        {
          "code": "java.annotation.added",
          "annotation": "@io.smallrye.common.annotation.CheckReturnValue",
          "justification": "This is a marker interface for static code analysis tools"
        },
        {
          "code": "java.method.addedToInterface",
          "classQualifiedName": "io.smallrye.mutiny.Multi",
          "justification": "Addition of the `ifNoItem` group."
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter io.smallrye.mutiny.groups.UniJoin.Builder<T> io.smallrye.mutiny.groups.UniJoin.Builder<T>::add(===io.smallrye.mutiny.Uni<? extends T>===)",
          "new": "parameter io.smallrye.mutiny.groups.UniJoin.Builder<T> io.smallrye.mutiny.groups.UniJoin.Builder<T>::add(===io.smallrye.mutiny.Uni<T>===)",
          "parameterIndex": "0",
          "justification": "Fix issues with parametric types in Uni.join() experimental APIs"
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinAllStrategy<T> io.smallrye.mutiny.groups.UniJoin::all(===io.smallrye.mutiny.Uni<? extends T>[]===)",
          "new": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinAllStrategy<T> io.smallrye.mutiny.groups.UniJoin::all(===io.smallrye.mutiny.Uni<T>[]===)",
          "parameterIndex": "0",
          "justification": "Fix issues with parametric types in Uni.join() experimental APIs"
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinAllStrategy<T> io.smallrye.mutiny.groups.UniJoin::all(===java.util.List<io.smallrye.mutiny.Uni<? extends T>>===)",
          "new": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinAllStrategy<T> io.smallrye.mutiny.groups.UniJoin::all(===java.util.List<io.smallrye.mutiny.Uni<T>>===)",
          "parameterIndex": "0",
          "justification": "Fix issues with parametric types in Uni.join() experimental APIs"
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinFirstStrategy<T> io.smallrye.mutiny.groups.UniJoin::first(===io.smallrye.mutiny.Uni<? extends T>[]===)",
          "new": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinFirstStrategy<T> io.smallrye.mutiny.groups.UniJoin::first(===io.smallrye.mutiny.Uni<T>[]===)",
          "parameterIndex": "0",
          "justification": "Fix issues with parametric types in Uni.join() experimental APIs"
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinFirstStrategy<T> io.smallrye.mutiny.groups.UniJoin::first(===java.util.List<io.smallrye.mutiny.Uni<? extends T>>===)",
          "new": "parameter <T> io.smallrye.mutiny.groups.UniJoin.JoinFirstStrategy<T> io.smallrye.mutiny.groups.UniJoin::first(===java.util.List<io.smallrye.mutiny.Uni<T>>===)",
          "parameterIndex": "0",
          "justification": "Fix issues with parametric types in Uni.join() experimental APIs"
        }
      ]
    }
  },
  {
    "extension": "revapi.reporter.json",
    "configuration": {
      "minSeverity": "POTENTIALLY_BREAKING",
      "minCriticality": "documented",
      "output": "target/compatibility.json",
      "indent": true,
      "append": false,
      "keepEmptyFile": true
    }
  }
]